name: Build and Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies and build
      run: |
        npm install
        npm run build

    - name: Create dist archive
      run: |
        cd dist
        zip -r ../cloudflare-email-routing-dist.zip .
        cd ..

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 30

    - name: Generate release tag
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: tag
      run: |
        echo "tag=v$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Cloudflare Email Routing ${{ steps.tag.outputs.tag }}
        body: |
          ## 🚀 Cloudflare 邮件路由管理系统

          ### 📦 部署文件
          下载 `cloudflare-email-routing-dist.zip` 文件，解压后上传到你的服务器即可。

          ### ✨ 功能特性
          - 完整的前端 React 应用
          - 用户认证和权限管理
          - 邮件转发规则管理
          - 管理员后台系统
          - 响应式设计，支持移动端

          ### 🔧 部署说明
          1. 下载并解压 `cloudflare-email-routing-dist.zip`
          2. 将解压后的文件上传到你的 Web 服务器
          3. 确保服务器支持 SPA 路由（配置 fallback 到 index.html）
          4. 访问你的域名即可使用

          ---
          构建时间: ${{ steps.tag.outputs.tag }}
        files: |
          cloudflare-email-routing-dist.zip
        draft: false
        prerelease: false
